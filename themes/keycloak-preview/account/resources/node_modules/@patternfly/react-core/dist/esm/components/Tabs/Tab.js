function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
var propTypes = {
  /** content rendered inside the Tab content area. */
  children: PropTypes.node,

  /** additional classes added to the Modal */
  className: PropTypes.string,

  /** Tab title */
  title: PropTypes.string.isRequired,

  /** uniquely identifies the tab */
  eventKey: PropTypes.number.isRequired
};
var defaultProps = {
  children: null,
  className: ''
};

var Tab = function Tab(_ref) {
  var className = _ref.className,
      children = _ref.children,
      title = _ref.title,
      eventKey = _ref.eventKey,
      props = _objectWithoutProperties(_ref, ["className", "children", "title", "eventKey"]);

  return React.createElement(React.Fragment, null, children);
};

Tab.propTypes = propTypes;
Tab.defaultProps = defaultProps;
export default Tab;