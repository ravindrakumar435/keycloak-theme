"use strict";

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "../../@patternfly/patternfly/components/Select/select.css.js", "@patternfly/react-styles", "prop-types", "./SingleSelect", "./SelectToggle", "./selectConstants"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("../../@patternfly/patternfly/components/Select/select.css.js"), require("@patternfly/react-styles"), require("prop-types"), require("./SingleSelect"), require("./SelectToggle"), require("./selectConstants"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.selectCss, global.reactStyles, global.propTypes, global.SingleSelect, global.SelectToggle, global.selectConstants);
    global.undefined = mod.exports;
  }
})(void 0, function (exports, _react, _selectCss, _reactStyles, _propTypes, _SingleSelect, _SelectToggle, _selectConstants) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _selectCss2 = _interopRequireDefault(_selectCss);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _SingleSelect2 = _interopRequireDefault(_SingleSelect);

  var _SelectToggle2 = _interopRequireDefault(_SelectToggle);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _typeof2(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof2 = function _typeof2(obj) {
        return typeof obj;
      };
    } else {
      _typeof2 = function _typeof2(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof2(obj);
  }

  function _typeof(obj) {
    if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
      _typeof = function _typeof(obj) {
        return _typeof2(obj);
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
      };
    }

    return _typeof(obj);
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  // seed for the aria-labelledby ID
  var currentId = 0;
  var propTypes = {
    /** Content rendered inside the Select */
    children: _propTypes2.default.node,

    /** Classes applied to the root of the Select */
    className: _propTypes2.default.string,

    /** Flag to indicate if select is expanded */
    isExpanded: _propTypes2.default.bool,

    /** Placeholder text of Select */
    placeholderText: _propTypes2.default.string,

    /** Selected item */
    selections: _propTypes2.default.string,

    /** Id of label for the Select aria-labelledby */
    ariaLabelledBy: _propTypes2.default.string,

    /** Callback for selection behavior */
    onSelect: _propTypes2.default.func.isRequired,

    /** Callback for toggle button behavior */
    onToggle: _propTypes2.default.func.isRequired,

    /** Variant of rendered Select */
    variant: _propTypes2.default.oneOf(['single']),

    /** Width of the select container as a number of px or string percentage */
    width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),

    /** Additional props are spread to the container <ul> */
    '': _propTypes2.default.any
  };
  var defaultProps = {
    children: null,
    className: '',
    isExpanded: false,
    ariaLabelledBy: '',
    selections: null,
    placeholderText: null,
    variant: _selectConstants.SelectVariant.single,
    width: '100%'
  };

  var Select =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Select, _React$Component);

    function Select() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, Select);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Select)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _defineProperty(_assertThisInitialized(_this), "parentRef", _react2.default.createRef());

      _defineProperty(_assertThisInitialized(_this), "state", {
        openedOnEnter: false
      });

      _defineProperty(_assertThisInitialized(_this), "onEnter", function () {
        _this.setState({
          openedOnEnter: true
        });
      });

      _defineProperty(_assertThisInitialized(_this), "onClose", function () {
        _this.setState({
          openedOnEnter: false
        });
      });

      return _this;
    }

    _createClass(Select, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            className = _this$props.className,
            variant = _this$props.variant,
            onToggle = _this$props.onToggle,
            onSelect = _this$props.onSelect,
            isExpanded = _this$props.isExpanded,
            selections = _this$props.selections,
            ariaLabelledBy = _this$props.ariaLabelledBy,
            placeholderText = _this$props.placeholderText,
            width = _this$props.width,
            props = _objectWithoutProperties(_this$props, ["children", "className", "variant", "onToggle", "onSelect", "isExpanded", "selections", "ariaLabelledBy", "placeholderText", "width"]);

        var openedOnEnter = this.state.openedOnEnter;
        var selectToggleId = "pf-toggle-id-".concat(currentId++);
        var childPlaceholderText = null;

        if (!selections && !placeholderText) {
          var childPlaceholder = children.filter(function (child) {
            return child.props.isPlaceholder === true;
          });
          childPlaceholderText = childPlaceholder[0] && childPlaceholder[0].props.value || children[0] && children[0].props.value;
        }

        return _react2.default.createElement("div", {
          className: (0, _reactStyles.css)(_selectCss2.default.select, isExpanded && _selectCss2.default.modifiers.expanded, className),
          ref: this.parentRef,
          style: {
            width: width
          }
        }, _react2.default.createElement(_selectConstants.SelectContext.Provider, {
          value: {
            onSelect: onSelect,
            onClose: this.onClose
          }
        }, variant === 'single' && _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement(_SelectToggle2.default, {
          id: selectToggleId,
          parentRef: this.parentRef.current,
          isExpanded: isExpanded,
          onToggle: onToggle,
          onEnter: this.onEnter,
          onClose: this.onClose,
          "aria-labelledby": "".concat(ariaLabelledBy, " ").concat(selectToggleId),
          style: {
            width: width
          }
        }, selections || placeholderText || childPlaceholderText), isExpanded && _react2.default.createElement(_SingleSelect2.default, _extends({}, props, {
          selected: selections,
          openedOnEnter: openedOnEnter,
          "aria-labelledby": ariaLabelledBy
        }), children))));
      }
    }]);

    return Select;
  }(_react2.default.Component);

  Select.propTypes = propTypes;
  Select.defaultProps = defaultProps;
  exports.default = Select;
});