"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _reactStyles = require("@patternfly/react-styles");

var _wizardCss = _interopRequireDefault(require("../../@patternfly/patternfly/components/Wizard/wizard.css.js"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WizardNavItem = function WizardNavItem(_ref) {
  var _ref$children = _ref.children,
      children = _ref$children === void 0 ? null : _ref$children,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? '' : _ref$label,
      _ref$current = _ref.current,
      current = _ref$current === void 0 ? false : _ref$current,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      step = _ref.step,
      onNavItemClick = _ref.onNavItemClick,
      _ref$hasChildren = _ref.hasChildren,
      hasChildren = _ref$hasChildren === void 0 ? false : _ref$hasChildren;
  return React.createElement("li", {
    className: (0, _reactStyles.css)(_wizardCss.default.wizardNavItem)
  }, React.createElement("a", {
    "aria-current": current && !hasChildren ? 'page' : 'false',
    onClick: function onClick() {
      return onNavItemClick(step);
    },
    className: (0, _reactStyles.css)(_wizardCss.default.wizardNavLink, current && 'pf-m-current', disabled && 'pf-m-disabled'),
    "aria-disabled": disabled ? 'true' : 'false',
    tabIndex: disabled ? -1 : undefined
  }, label), children);
};

WizardNavItem.propTypes = {
  children: _propTypes.default.node,
  label: _propTypes.default.string,
  current: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  step: _propTypes.default.number.isRequired,
  hasChildren: _propTypes.default.bool
};
var _default = WizardNavItem;
exports.default = _default;